# Generated by Django 3.2.16 on 2024-01-22 03:48

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScoreReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_ratio', models.FloatField(verbose_name='Коэффициент текущей ликвидности')),
                ('equity_ratio', models.FloatField(verbose_name='Коэффициент автономии')),
                ('operational_margin', models.FloatField(verbose_name='Маржа операционной прибыли')),
                ('net_margin', models.FloatField(verbose_name='Маржа чистой прибыли')),
                ('debt_to_ebitda', models.FloatField(verbose_name='Коэффициент Долг/EBITDA')),
                ('experience', models.SmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Опыт работы')),
                ('contracts_completed', models.SmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Количество завершенных контрактов за 2 года')),
                ('fixed_assets_ratio', models.FloatField(verbose_name='Доля основных средств в активах')),
                ('oper_income_growth', models.FloatField(verbose_name='Прирост операционной прибыли')),
                ('license_category', models.SmallIntegerField(choices=[(0, 'Нет лицензии'), (1, 'Лицензия 1 категории'), (2, 'Лицензия 2 категории'), (3, 'Лицензия 3 категории')], default=0)),
                ('contract_weight', models.FloatField(verbose_name='Доля страхуемого контракта')),
                ('net_working_capital_to_contract', models.FloatField(verbose_name='СОК к сумме страхуемого контракта')),
                ('scoring', models.FloatField(verbose_name='Скоринг')),
                ('risk_level', models.CharField(choices=[(0, 'Умеренный'), (1, 'Повышенный'), (2, 'Высокий')], max_length=12, verbose_name='Уровень риска')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Создано/обновлено')),
            ],
            options={
                'verbose_name': 'Скоринговый отчет',
                'verbose_name_plural': 'Скоринговые отчеты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ScoreRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(max_length=150, verbose_name='Номер контракта')),
                ('contract_date', models.DateTimeField(verbose_name='Дата контракта')),
                ('contract_amount', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Сумма контракта')),
                ('current_assets', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Краткосрочные активы')),
                ('current_liabilities', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Краткосрочные обязательства')),
                ('equity', models.FloatField(default=0, verbose_name='Собственный капитал')),
                ('assets', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Активы')),
                ('fixed_assets', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Основные средства')),
                ('sales', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Доход от реализации')),
                ('oper_income_current', models.FloatField(default=0, verbose_name='Операционная прибыль текущего периода')),
                ('oper_income_previous', models.FloatField(default=0, verbose_name='Операционная прибыль предыдущего периода')),
                ('net_income', models.FloatField(default=0, verbose_name='Чистая прибыль')),
                ('net_debt', models.FloatField(default=0, verbose_name='Чистый долг')),
                ('net_interest_expense', models.FloatField(default=0, verbose_name='Чистые финансовые расходы')),
                ('depreciation', models.FloatField(default=0, verbose_name='Амортизация и износ')),
                ('income_tax', models.FloatField(default=0, verbose_name='Расходы по КПН')),
                ('experience', models.SmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Опыт работы')),
                ('contracts_completed', models.SmallIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Количество завершенных контрактов за 2 года')),
                ('license_category', models.SmallIntegerField(choices=[(0, 'Нет лицензии'), (1, 'Лицензия 1 категории'), (2, 'Лицензия 2 категории'), (3, 'Лицензия 3 категории')], default=0)),
                ('contract_current_outstanding', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Остаток денег по контракту')),
                ('contract_total_outstanding', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0.0001, message='Значение не может быть меньше 0.')], verbose_name='Остаток денег по реестру контрактов')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Создано/обновлено')),
                ('policyholder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_request', to='companies.company', verbose_name='Страхователь')),
            ],
            options={
                'verbose_name': 'Заявка на скоринг',
                'verbose_name_plural': 'Заявки на скоринг',
                'ordering': ['-created_at'],
            },
        ),
    ]
